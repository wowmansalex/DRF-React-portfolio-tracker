{"ast":null,"code":"import api from '../constants/api';\nimport { PORTFOLIO, ASSET, TRANSACTION, LOG_DATA } from './constants/endpoints';\nimport { userToken } from '../constants/auth';\nexport const fetchPortfolio = createAsyncThunk('portfolio/fetchPortfolio', async (arg, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userToken}`\n      }\n    };\n    const response = await api.get(PORTFOLIO, config);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      console.log(error.message);\n      return rejectWithValue(error.response.data.message);\n    } else {\n      console.log('source: fetchPortfolio:' + error.message);\n      return rejectWithValue(error.message);\n    }\n  }\n});\nexport const fetchAssets = createAsyncThunk('assets/fetchAssets', async (arg, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userToken}`\n      }\n    };\n    const response = await api.get(ASSET, config);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});\nexport const fetchTransactions = createAsyncThunk('transactions/fetchTransactions', async _ref3 => {\n  let {\n    rejectWithValue\n  } = _ref3;\n\n  try {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userToken}`\n      }\n    };\n    const response = await api.get(TRANSACTION, config);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});\nexport const fetchTransactionByAsset = createAsyncThunk('transactions/fetchTransactiopnsByAsset', async coin => {\n  try {\n    const response = await api.get(TRANSACTION + `${coin}`, config);\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});\nexport const createNewTransaction = createAsyncThunk('transactions/createNewTransaction', async data => {\n  try {\n    const response = await api.post('/api/transaction/', data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nconst initialState = {\n  id: 0,\n  portfolio_name: '',\n  balance: 0,\n  assets: [],\n  trannsactions: [],\n  balance: 0,\n  isLoading: false,\n  error: ''\n};\nconst portfolioSlice = createSlice({\n  name: 'portfolio',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchPortfolio.pending]: state => {\n      console.log('fetch portfolio pending');\n      state.isLoading = true;\n    },\n    [fetchPortfolio.fulfilled]: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      console.log('fetch portfolio fulfilled');\n      state.isLoading = false;\n      state.balance = payload.balance;\n      state.id = payload.id;\n    },\n    [fetchPortfolio.rejected]: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      console.log('fetch portfolio rejected');\n      state.isLoading = false;\n      state.error = payload;\n    }\n  }\n});\nexport const {} = portfolioSlice.actions;\nexport default portfolioSlice.reducer;","map":{"version":3,"names":["api","PORTFOLIO","ASSET","TRANSACTION","LOG_DATA","userToken","fetchPortfolio","createAsyncThunk","arg","rejectWithValue","config","headers","Authorization","response","get","console","log","data","error","message","fetchAssets","fetchTransactions","fetchTransactionByAsset","coin","createNewTransaction","post","initialState","id","portfolio_name","balance","assets","trannsactions","isLoading","portfolioSlice","createSlice","name","reducers","extraReducers","pending","state","fulfilled","payload","rejected","actions","reducer"],"sources":["/Users/awaumans/Desktop/coding/python/django-react-portfolio-v2/frontend/src/features/portfolio/portfolioSlice.js"],"sourcesContent":["import api from '../constants/api';\nimport { PORTFOLIO, ASSET, TRANSACTION, LOG_DATA } from './constants/endpoints';\nimport { userToken } from '../constants/auth';\n\nexport const fetchPortfolio = createAsyncThunk(\n\t'portfolio/fetchPortfolio',\n\tasync (arg, { rejectWithValue }) => {\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${userToken}`,\n\t\t\t\t},\n\t\t\t};\n\n\t\t\tconst response = await api.get(PORTFOLIO, config);\n\t\t\tconsole.log(response.data);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tif (error.response && error.response.data.message) {\n\t\t\t\tconsole.log(error.message);\n\t\t\t\treturn rejectWithValue(error.response.data.message);\n\t\t\t} else {\n\t\t\t\tconsole.log('source: fetchPortfolio:' + error.message);\n\t\t\t\treturn rejectWithValue(error.message);\n\t\t\t}\n\t\t}\n\t}\n);\n\nexport const fetchAssets = createAsyncThunk(\n\t'assets/fetchAssets',\n\tasync (arg, { rejectWithValue }) => {\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${userToken}`,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await api.get(ASSET, config);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tif (error.response && error.response.data.message) {\n\t\t\t\treturn rejectWithValue(error.response.data.message);\n\t\t\t} else {\n\t\t\t\treturn rejectWithValue(error.message);\n\t\t\t}\n\t\t}\n\t}\n);\n\nexport const fetchTransactions = createAsyncThunk(\n\t'transactions/fetchTransactions',\n\tasync ({ rejectWithValue }) => {\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `Bearer ${userToken}`,\n\t\t\t\t},\n\t\t\t};\n\t\t\tconst response = await api.get(TRANSACTION, config);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tif (error.response && error.response.data.message) {\n\t\t\t\treturn rejectWithValue(error.response.data.message);\n\t\t\t} else {\n\t\t\t\treturn rejectWithValue(error.message);\n\t\t\t}\n\t\t}\n\t}\n);\n\nexport const fetchTransactionByAsset = createAsyncThunk(\n\t'transactions/fetchTransactiopnsByAsset',\n\tasync coin => {\n\t\ttry {\n\t\t\tconst response = await api.get(TRANSACTION + `${coin}`, config);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tif (error.response && error.response.data.message) {\n\t\t\t\treturn rejectWithValue(error.response.data.message);\n\t\t\t} else {\n\t\t\t\treturn rejectWithValue(error.message);\n\t\t\t}\n\t\t}\n\t}\n);\n\nexport const createNewTransaction = createAsyncThunk(\n\t'transactions/createNewTransaction',\n\tasync data => {\n\t\ttry {\n\t\t\tconst response = await api.post('/api/transaction/', data);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n);\n\nconst initialState = {\n\tid: 0,\n\tportfolio_name: '',\n\tbalance: 0,\n\tassets: [],\n\ttrannsactions: [],\n\tbalance: 0,\n\tisLoading: false,\n\terror: '',\n};\n\nconst portfolioSlice = createSlice({\n\tname: 'portfolio',\n\tinitialState,\n\treducers: {},\n\textraReducers: {\n\t\t[fetchPortfolio.pending]: state => {\n\t\t\tconsole.log('fetch portfolio pending');\n\t\t\tstate.isLoading = true;\n\t\t},\n\t\t[fetchPortfolio.fulfilled]: (state, { payload }) => {\n\t\t\tconsole.log('fetch portfolio fulfilled');\n\t\t\tstate.isLoading = false;\n\t\t\tstate.balance = payload.balance;\n\t\t\tstate.id = payload.id;\n\t\t},\n\t\t[fetchPortfolio.rejected]: (state, { payload }) => {\n\t\t\tconsole.log('fetch portfolio rejected');\n\t\t\tstate.isLoading = false;\n\t\t\tstate.error = payload;\n\t\t},\n\t},\n});\n\nexport const {} = portfolioSlice.actions;\nexport default portfolioSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}